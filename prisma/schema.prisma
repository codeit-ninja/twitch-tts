// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator zod {
    provider            = "timeout 5s npx zod-prisma-types"
    output              = "../src/lib/schemas"
    createInputTypes    = false
    createRelationValuesTypes = true
}

model User {
    id                  Int         @id @default(autoincrement())
    username            String      @unique
    password            String
    email               String      @unique
    TtsConfig           TtsConfig?
    UserTwitchTokenData UserTwitchTokenData?
    triggers            Triggers[]
    triggerActions      TriggerActions[]
}

model UserTwitchTokenData {
    user                User        @relation(fields: [userId], references: [id])
    userId              Int         @unique
    accessToken         String
    expiresIn           Int?        
    obtainmentTimestamp BigInt      @db.BigInt
    refreshToken        String?
    scope               String[]
}

model TtsConfig {
    id          Int     @id @default(autoincrement())
    user        User    @relation(fields: [userId], references: [id])
    userId      Int     @unique
    enabled     Boolean
    channel     String
    voice       Json
    engine      String
}

model Triggers {
    id          Int     @id @default(autoincrement())
    user        User    @relation(fields: [userId], references: [id])
    userId      Int
    name        String
    event       String
    /// [PrismaJson.TriggerCondition]
    conditions  Json?
    actions     TriggerActions[]
}

model TriggerActions {
    id          Int         @id @default(autoincrement())
    user        User        @relation(fields: [userId], references: [id])
    userId      Int
    trigger     Triggers    @relation(fields: [triggerId], references: [id])
    triggerId   Int
    /// [PrismaJson.TriggerActionTts]
    data        Json
}